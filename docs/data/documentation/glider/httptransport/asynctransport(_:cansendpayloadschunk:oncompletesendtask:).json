{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncTransport"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transport"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport","preciseIdentifier":"s:6Glider14AsyncTransportC","text":"AsyncTransport"},{"kind":"text","text":", "},{"kind":"externalParam","text":"canSendPayloadsChunk"},{"kind":"text","text":" "},{"kind":"internalParam","text":"chunk"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport","preciseIdentifier":"s:6Glider14AsyncTransportC","text":"AsyncTransport"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/Chunk","preciseIdentifier":"s:6Glider14AsyncTransportC5Chunka","text":"Chunk"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onCompleteSendTask"},{"kind":"text","text":" "},{"kind":"internalParam","text":"completion"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" (("},{"kind":"typeIdentifier","identifier":"doc:\/\/Glider\/documentation\/Glider\/ChunkCompletionResult","preciseIdentifier":"s:6Glider21ChunkCompletionResultO","text":"ChunkCompletionResult"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":"))"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"transport","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"transport instance."}]}]},{"name":"chunk","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"payloads chunk to send."}]}]},{"name":"completion","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"call completion callback to inform the class about what events failed to be sent."},{"type":"text","text":" "},{"type":"text","text":"key is the "},{"type":"codeVoice","code":"event.id"},{"type":"text","text":" while value is the error occurred."}]}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glider\/httptransport\/asynctransport(_:cansendpayloadschunk:oncompletesendtask:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Glider\/documentation\/Glider\/HTTPTransport\/asyncTransport(_:canSendPayloadsChunk:onCompleteSendTask:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This method is mandatory to use the "},{"type":"codeVoice","code":"AsyncTransport"},{"type":"text","text":". You should implement"},{"type":"text","text":" "},{"type":"text","text":"the behaviour to execute when a new chunk of payloads is ready to be sent"},{"type":"text","text":" "},{"type":"text","text":"to whatsover (network, db etc.)."},{"type":"text","text":" "},{"type":"text","text":"At the end of the operation you should call the "},{"type":"codeVoice","code":"completion"},{"type":"text","text":" callback saying to the"},{"type":"text","text":" "},{"type":"text","text":"class the result of the operation."},{"type":"text","text":" "},{"type":"text","text":"If an error is reporteach single payload can be resent according to their attempts already made."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncTransport"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"AsyncTransport","preciseIdentifier":"s:6Glider14AsyncTransportC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"canSendPayloadsChunk"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncTransport","preciseIdentifier":"s:6Glider14AsyncTransportC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Chunk","preciseIdentifier":"s:6Glider14AsyncTransportC5Chunka"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onCompleteSendTask"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"ChunkCompletionResult","preciseIdentifier":"s:6Glider21ChunkCompletionResultO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":"))"}],"title":"asyncTransport(_:canSendPayloadsChunk:onCompleteSendTask:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:6Glider13HTTPTransportC14asyncTransport_20canSendPayloadsChunk010onCompleteF4TaskyAA05AsyncD0C_SayAA5EventV5event_AA16SerializableData_pSg7messageSi13countAttemptstGyAA0H16CompletionResultOctF","modules":[{"name":"Glider"}]},"hierarchy":{"paths":[["doc:\/\/Glider\/documentation\/Glider","doc:\/\/Glider\/documentation\/Glider\/HTTPTransport"]]},"references":{"doc://Glider/documentation/Glider/HTTPTransport/asyncTransport(_:canSendPayloadsChunk:onCompleteSendTask:)":{"role":"symbol","title":"asyncTransport(_:canSendPayloadsChunk:onCompleteSendTask:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncTransport"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"AsyncTransport","preciseIdentifier":"s:6Glider14AsyncTransportC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"canSendPayloadsChunk"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncTransport","preciseIdentifier":"s:6Glider14AsyncTransportC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Chunk","preciseIdentifier":"s:6Glider14AsyncTransportC5Chunka"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onCompleteSendTask"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"ChunkCompletionResult","preciseIdentifier":"s:6Glider21ChunkCompletionResultO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":"))"}],"abstract":[{"type":"text","text":"This method is mandatory to use the "},{"type":"codeVoice","code":"AsyncTransport"},{"type":"text","text":". You should implement"},{"type":"text","text":" "},{"type":"text","text":"the behaviour to execute when a new chunk of payloads is ready to be sent"},{"type":"text","text":" "},{"type":"text","text":"to whatsover (network, db etc.)."},{"type":"text","text":" "},{"type":"text","text":"At the end of the operation you should call the "},{"type":"codeVoice","code":"completion"},{"type":"text","text":" callback saying to the"},{"type":"text","text":" "},{"type":"text","text":"class the result of the operation."},{"type":"text","text":" "},{"type":"text","text":"If an error is reporteach single payload can be resent according to their attempts already made."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/HTTPTransport\/asyncTransport(_:canSendPayloadsChunk:onCompleteSendTask:)","kind":"symbol","type":"topic","url":"\/documentation\/glider\/httptransport\/asynctransport(_:cansendpayloadschunk:oncompletesendtask:)"},"doc://Glider/documentation/Glider":{"role":"collection","title":"Glider","abstract":[],"identifier":"doc:\/\/Glider\/documentation\/Glider","kind":"symbol","type":"topic","url":"\/documentation\/glider"},"doc://Glider/documentation/Glider/ChunkCompletionResult":{"role":"symbol","title":"ChunkCompletionResult","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChunkCompletionResult"}],"abstract":[{"type":"text","text":"Represent the result of asynchronous chunk of payload sent."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/ChunkCompletionResult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChunkCompletionResult"}],"url":"\/documentation\/glider\/chunkcompletionresult"},"doc://Glider/documentation/Glider/AsyncTransport/Chunk":{"role":"symbol","title":"AsyncTransport.Chunk","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Chunk"}],"abstract":[],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/Chunk","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Chunk"}],"url":"\/documentation\/glider\/asynctransport\/chunk"},"doc://Glider/documentation/Glider/HTTPTransport":{"role":"symbol","title":"HTTPTransport","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPTransport"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"HTTPTransport"},{"type":"text","text":" is used to send log events directly to an http"},{"type":"text","text":" "},{"type":"text","text":"service by executing network calls to a specific endpoint."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/HTTPTransport","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPTransport"}],"url":"\/documentation\/glider\/httptransport"},"doc://Glider/documentation/Glider/AsyncTransport":{"role":"symbol","title":"AsyncTransport","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncTransport"}],"abstract":[{"type":"codeVoice","code":"AsyncTransport"},{"type":"text","text":" is a transport specifically made for asynchrouns request."},{"type":"text","text":" "},{"type":"text","text":"It store logs locally before sending to the network."},{"type":"text","text":" "},{"type":"text","text":"It also support automatic retry for unsent payloads."},{"type":"text","text":" "},{"type":"text","text":"The underlying storage is an "},{"type":"codeVoice","code":"SQLite"},{"type":"text","text":" in memory database by default."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncTransport"}],"url":"\/documentation\/glider\/asynctransport"}}}