{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoggerIdentifiable"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While you can use a simple "},{"type":"codeVoice","code":"String"},{"type":"text","text":" to define the identifier of a log, a more"},{"type":"text","text":" "},{"type":"text","text":"swifty way is to declare an enum conform to this protocol and avoid literals in your code."},{"type":"text","text":" "},{"type":"text","text":"For example:"}]},{"type":"codeListing","syntax":"swift","code":["enum Loggers: String, LoggerIdentifiable {","   case storage = \"storage-layer\"","   case network = \"network-layer\"","","   public static let subsystem = \"com.myawesomeapp\"","","   public var id: String { rawValue }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And use it to create your new logger instead of passing string literals."}]},{"type":"codeListing","syntax":"swift","code":["let networkLogger = Log {","   $0.subsystem = Loggers.subsystem","   $0.category = Loggers.network","   \/\/ other configuration...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Aside from suggestions your are free to use "},{"type":"codeVoice","code":"$0.subsystem = \"com.myawesomeapp\""},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glider\/loggeridentifiable"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Glider\/documentation\/Glider\/LoggerIdentifiable","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This protocol is used to offer a type-safe way to declare log identifiers"},{"type":"text","text":" "},{"type":"text","text":"properties "},{"type":"codeVoice","code":"subsystem"},{"type":"text","text":" and "},{"type":"codeVoice","code":"category"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoggerIdentifiable"}],"title":"LoggerIdentifiable","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:6Glider18LoggerIdentifiableP","modules":[{"name":"Glider"}],"navigatorTitle":[{"kind":"identifier","text":"LoggerIdentifiable"}]},"hierarchy":{"paths":[["doc:\/\/Glider\/documentation\/Glider"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Glider\/documentation\/Glider\/LoggerIdentifiable\/id"]}],"references":{"doc://Glider/documentation/Glider/LoggerIdentifiable":{"role":"symbol","title":"LoggerIdentifiable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoggerIdentifiable"}],"abstract":[{"type":"text","text":"This protocol is used to offer a type-safe way to declare log identifiers"},{"type":"text","text":" "},{"type":"text","text":"properties "},{"type":"codeVoice","code":"subsystem"},{"type":"text","text":" and "},{"type":"codeVoice","code":"category"}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/LoggerIdentifiable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LoggerIdentifiable"}],"url":"\/documentation\/glider\/loggeridentifiable"},"doc://Glider/documentation/Glider/LoggerIdentifiable/id":{"role":"symbol","title":"id","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"Unique identifier of the log."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/LoggerIdentifiable\/id","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/glider\/loggeridentifiable\/id"},"doc://Glider/documentation/Glider":{"role":"collection","title":"Glider","abstract":[],"identifier":"doc:\/\/Glider\/documentation\/Glider","kind":"symbol","type":"topic","url":"\/documentation\/glider"}}}