{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncTransport"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a base transport used to help creating final implementation for other transports."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glider\/asynctransport"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Glider\/documentation\/Glider\/Transport"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"AsyncTransport"},{"type":"text","text":" is a transport specifically made for asynchrouns request."},{"type":"text","text":" "},{"type":"text","text":"It store logs locally before sending to the network."},{"type":"text","text":" "},{"type":"text","text":"It also support automatic retry for unsent payloads."},{"type":"text","text":" "},{"type":"text","text":"The underlying storage is an "},{"type":"codeVoice","code":"SQLite"},{"type":"text","text":" in memory database by default."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncTransport"}],"title":"AsyncTransport","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:6Glider14AsyncTransportC","modules":[{"name":"Glider"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncTransport"}]},"hierarchy":{"paths":[["doc:\/\/Glider\/documentation\/Glider"]]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/Configuration-swift.struct"]},{"title":"Initializers","identifiers":["doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/init(delegate:_:)","doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/init(delegate:configuration:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/configuration-swift.property","doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/delegate","doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/isEnabled","doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/minimumAcceptedLevel","doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/queue"]},{"title":"Instance Methods","identifiers":["doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/countBufferedEvents()","doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/flush()","doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/record(event:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/Chunk","doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/Payload"]}],"references":{"doc://Glider/documentation/Glider/AsyncTransport/delegate":{"role":"symbol","title":"delegate","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"delegate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncTransportDelegate","preciseIdentifier":"s:6Glider22AsyncTransportDelegateP"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Behaviour."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/delegate","kind":"symbol","type":"topic","url":"\/documentation\/glider\/asynctransport\/delegate"},"doc://Glider/documentation/Glider/AsyncTransport/isEnabled":{"role":"symbol","title":"isEnabled","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEnabled"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Transport is enabled."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/isEnabled","kind":"symbol","type":"topic","url":"\/documentation\/glider\/asynctransport\/isenabled"},"doc://Glider/documentation/Glider/AsyncTransport/init(delegate:configuration:)":{"role":"symbol","title":"init(delegate:configuration:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"delegate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncTransportDelegate","preciseIdentifier":"s:6Glider22AsyncTransportDelegateP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Configuration","preciseIdentifier":"s:6Glider14AsyncTransportC13ConfigurationV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Initialize a new AsyncTransport."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/init(delegate:configuration:)","kind":"symbol","type":"topic","url":"\/documentation\/glider\/asynctransport\/init(delegate:configuration:)"},"doc://Glider/documentation/Glider/AsyncTransport/Chunk":{"role":"symbol","title":"AsyncTransport.Chunk","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Chunk"}],"abstract":[],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/Chunk","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Chunk"}],"url":"\/documentation\/glider\/asynctransport\/chunk"},"doc://Glider/documentation/Glider/AsyncTransport/Payload":{"role":"symbol","title":"AsyncTransport.Payload","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Payload"}],"abstract":[],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/Payload","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Payload"}],"url":"\/documentation\/glider\/asynctransport\/payload"},"doc://Glider/documentation/Glider/AsyncTransport":{"role":"symbol","title":"AsyncTransport","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncTransport"}],"abstract":[{"type":"codeVoice","code":"AsyncTransport"},{"type":"text","text":" is a transport specifically made for asynchrouns request."},{"type":"text","text":" "},{"type":"text","text":"It store logs locally before sending to the network."},{"type":"text","text":" "},{"type":"text","text":"It also support automatic retry for unsent payloads."},{"type":"text","text":" "},{"type":"text","text":"The underlying storage is an "},{"type":"codeVoice","code":"SQLite"},{"type":"text","text":" in memory database by default."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncTransport"}],"url":"\/documentation\/glider\/asynctransport"},"doc://Glider/documentation/Glider/Transport":{"role":"symbol","title":"Transport","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Transport"}],"abstract":[{"type":"text","text":"Transport is where an "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" is received and stored."},{"type":"text","text":" "},{"type":"text","text":"A Log instance can have one or more underlying transport services."},{"type":"text","text":" "},{"type":"text","text":"Glider offers an exhaustive list of built-in transports created explicitly"},{"type":"text","text":" "},{"type":"text","text":"for every need (a local sqlite3 storage, an EKL compatible transport, console transports, and so on)."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/Transport","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Transport"}],"url":"\/documentation\/glider\/transport"},"doc://Glider/documentation/Glider/AsyncTransport/Configuration-swift.struct":{"role":"symbol","title":"AsyncTransport.Configuration","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Configuration"}],"abstract":[],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/Configuration-swift.struct","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Configuration"}],"url":"\/documentation\/glider\/asynctransport\/configuration-swift.struct"},"doc://Glider/documentation/Glider/AsyncTransport/configuration-swift.property":{"role":"symbol","title":"configuration","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Configuration","preciseIdentifier":"s:6Glider14AsyncTransportC13ConfigurationV"}],"abstract":[{"type":"text","text":"Configuration used."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/configuration-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/glider\/asynctransport\/configuration-swift.property"},"doc://Glider/documentation/Glider/AsyncTransport/minimumAcceptedLevel":{"role":"symbol","title":"minimumAcceptedLevel","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimumAcceptedLevel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Level","preciseIdentifier":"s:6Glider5LevelO"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Minumum accepted level for this transport."},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" means every passing message level is accepted."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/minimumAcceptedLevel","kind":"symbol","type":"topic","url":"\/documentation\/glider\/asynctransport\/minimumacceptedlevel"},"doc://Glider/documentation/Glider/AsyncTransport/queue":{"role":"symbol","title":"queue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"queue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"c:objc(cs)OS_dispatch_queue"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"DispatchQueue"},{"type":"text","text":" to use for the recorder."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/queue","kind":"symbol","type":"topic","url":"\/documentation\/glider\/asynctransport\/queue"},"doc://Glider/documentation/Glider/AsyncTransport/flush()":{"role":"symbol","title":"flush()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flush"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Perform manual flush on buffer data."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/flush()","kind":"symbol","type":"topic","url":"\/documentation\/glider\/asynctransport\/flush()"},"doc://Glider/documentation/Glider/AsyncTransport/countBufferedEvents()":{"role":"symbol","title":"countBufferedEvents()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"countBufferedEvents"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Count the number of buffered events pending for sent."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/countBufferedEvents()","kind":"symbol","type":"topic","url":"\/documentation\/glider\/asynctransport\/countbufferedevents()"},"doc://Glider/documentation/Glider/AsyncTransport/init(delegate:_:)":{"role":"symbol","title":"init(delegate:_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"delegate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncTransportDelegate","preciseIdentifier":"s:6Glider22AsyncTransportDelegateP"},{"kind":"text","text":", (("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Configuration","preciseIdentifier":"s:6Glider14AsyncTransportC13ConfigurationV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Initialize a new AsyncTransport system."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/init(delegate:_:)","kind":"symbol","type":"topic","url":"\/documentation\/glider\/asynctransport\/init(delegate:_:)"},"doc://Glider/documentation/Glider/AsyncTransport/record(event:)":{"role":"symbol","title":"record(event:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"record"},{"kind":"text","text":"("},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Event","preciseIdentifier":"s:6Glider5EventV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Called by the channel to register a new payload to the given recorder."},{"type":"text","text":" "},{"type":"text","text":"The implementation is up to the recorder itself, maybe a rotating file, a database"},{"type":"text","text":" "},{"type":"text","text":"or a remote web-service."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/AsyncTransport\/record(event:)","kind":"symbol","type":"topic","url":"\/documentation\/glider\/asynctransport\/record(event:)"},"doc://Glider/documentation/Glider":{"role":"collection","title":"Glider","abstract":[],"identifier":"doc:\/\/Glider\/documentation\/Glider","kind":"symbol","type":"topic","url":"\/documentation\/glider"}}}