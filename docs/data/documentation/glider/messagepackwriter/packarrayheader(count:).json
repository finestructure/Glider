{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"packArrayHeader"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"count","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Number of elements that the array will contain"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"type":"codeListing","syntax":null,"code":["let packer = MessagePackWriter()","packer.packArrayHeader(count: 2)","packer.pack(\"foo\") \/\/ First Object","packer.pack(2)","packer.pack(\"bar\") \/\/ Second object"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"throws MessagePackWriterError.arrayTooBig if the array is longer than 2^32-1 elements."},{"type":"text","text":" "},{"type":"text","text":"throws MessagePackWriterError.invalidArgument if count is < 0"}]}],"type":"aside","name":"Throws"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also use packFlatArray(_ array: [MessagePackFlatValue])"}]}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glider\/messagepackwriter\/packarrayheader(count:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Glider\/documentation\/Glider\/MessagePackWriter\/packArrayHeader(count:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Pack an array header only."},{"type":"text","text":" "},{"type":"text","text":"Most of the time, you will want to write an array using pack(_: [Any?])"},{"type":"text","text":" "},{"type":"text","text":"This method allows you to pack arrays manually, meaning"},{"type":"text","text":" "},{"type":"text","text":"that the array count represents the number of complex messages to unpack serially,"},{"type":"text","text":" "},{"type":"text","text":"rather than the absolute number of messagepack values."},{"type":"text","text":" "},{"type":"text","text":"The parser should expect this kind of array, which cannot be unpacked"},{"type":"text","text":" "},{"type":"text","text":"using a generic method."}],"kind":"symbol","metadata":{"role":"symbol","title":"packArrayHeader(count:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"packArrayHeader"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"symbolKind":"method","externalID":"s:6Glider17MessagePackWriterV15packArrayHeader5countySi_tKF","extendedModule":"Glider","modules":[{"name":"Glider"}]},"hierarchy":{"paths":[["doc:\/\/Glider\/documentation\/Glider","doc:\/\/Glider\/documentation\/Glider\/MessagePackWriter"]]},"references":{"doc://Glider/documentation/Glider/MessagePackWriter/packArrayHeader(count:)":{"role":"symbol","title":"packArrayHeader(count:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"packArrayHeader"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Pack an array header only."},{"type":"text","text":" "},{"type":"text","text":"Most of the time, you will want to write an array using pack(_: [Any?])"},{"type":"text","text":" "},{"type":"text","text":"This method allows you to pack arrays manually, meaning"},{"type":"text","text":" "},{"type":"text","text":"that the array count represents the number of complex messages to unpack serially,"},{"type":"text","text":" "},{"type":"text","text":"rather than the absolute number of messagepack values."},{"type":"text","text":" "},{"type":"text","text":"The parser should expect this kind of array, which cannot be unpacked"},{"type":"text","text":" "},{"type":"text","text":"using a generic method."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/MessagePackWriter\/packArrayHeader(count:)","kind":"symbol","type":"topic","url":"\/documentation\/glider\/messagepackwriter\/packarrayheader(count:)"},"doc://Glider/documentation/Glider":{"role":"collection","title":"Glider","abstract":[],"identifier":"doc:\/\/Glider\/documentation\/Glider","kind":"symbol","type":"topic","url":"\/documentation\/glider"},"doc://Glider/documentation/Glider/MessagePackWriter":{"role":"symbol","title":"MessagePackWriter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MessagePackWriter"}],"abstract":[{"type":"text","text":"Handles packing data in a MsgPack message. Once done, just read the "},{"type":"codeVoice","code":"data"},{"type":"text","text":" property."},{"type":"text","text":" "},{"type":"text","text":"There is no need to close or free anything."}],"identifier":"doc:\/\/Glider\/documentation\/Glider\/MessagePackWriter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MessagePackWriter"}],"url":"\/documentation\/glider\/messagepackwriter"}}}